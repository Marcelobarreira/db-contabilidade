import Link from "next/link";
import Image from "next/image";
import { redirect } from "next/navigation";
import { prismaWithRetry } from "../../lib/prisma-retry";
import { getSession } from "../../lib/session";

const currencyFormatter = new Intl.NumberFormat("pt-BR", {
  style: "currency",
  currency: "BRL",
});

function formatDate(date: Date) {
  return new Intl.DateTimeFormat("pt-BR", {
    day: "2-digit",
    month: "short",
    year: "numeric",
  }).format(date);
}

export default async function ClientDashboard() {
  const session = await getSession();

  if (!session) {
    redirect("/");
  }

  if (session.admin) {
    redirect("/admin");
  }

  if (session.companyId == null) {
    redirect("/");
  }

  const [company, transactions] = await Promise.all([
    prismaWithRetry((client) =>
      client.company.findUnique({
        where: { id: session.companyId! },
        select: {
          id: true,
          name: true,
          email: true,
          cnpj: true,
          createdAt: true,
          users: {
            select: { id: true },
          },
        },
      }),
    ),
    prismaWithRetry((client) =>
      client.cashEntry.findMany({
        where: { companyId: session.companyId! },
        orderBy: { date: "desc" },
        take: 20,
      }),
    ),
  ]);

  if (!company) {
    redirect("/");
  }

  const totals = transactions.reduce(
    (acc, entry) => {
      if (entry.movement === "RECEITA") {
        acc.income += Number(entry.amount);
      } else if (entry.movement === "DESPESA" || entry.movement === "COMPRA" || entry.movement === "RETIRADA") {
        acc.expense += Number(entry.amount);
      }
      return acc;
    },
    { income: 0, expense: 0 },
  );
  const balance = totals.income - Math.abs(totals.expense);

  return (
    <main className="min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-slate-100">
      <header className="border-b border-white/10 bg-white/5 backdrop-blur-xl">
        <div className="mx-auto flex max-w-6xl flex-col gap-6 px-8 py-8 sm:flex-row sm:items-center sm:justify-between">
          <div className="flex items-center gap-4">
            <Image
              src="/dbcontabilidade.png"
              alt="DB Contabilidade"
              width={56}
              height={56}
              className="h-14 w-14 rounded-2xl border border-white/10 bg-white object-cover"
              priority
            />
            <div>
              <p className="text-sm uppercase tracking-[0.3em] text-slate-300/80">Área do cliente</p>
              <h1 className="text-3xl font-semibold text-white">{company.name}</h1>
              <p className="text-sm text-slate-300/80">CNPJ {company.cnpj}</p>
            </div>
          </div>
          <div className="flex items-center gap-3 text-sm text-slate-300/80">
            <span className="rounded-full border border-white/10 bg-white/10 px-4 py-2 font-medium text-slate-100">
              Atualizado em: {formatDate(new Date())}
            </span>
            <button
              className="rounded-xl border border-white/10 bg-slate-900/70 px-4 py-2 font-semibold text-slate-100 transition hover:border-red-500 hover:text-red-200"
              onClick={async () => {
                await fetch("/api/logout", { method: "POST" });
                window.location.href = "/";
              }}
            >
              Sair
            </button>
          </div>
        </div>
      </header>

      <div className="mx-auto max-w-6xl px-8 py-10 space-y-10">
        <section className="grid gap-4 md:grid-cols-3">
          <article className="rounded-2xl border border-white/10 bg-white/5 p-6 shadow-inner shadow-white/5">
            <p className="text-sm font-medium text-slate-300/80">Saldo acumulado</p>
            <p className="mt-3 text-3xl font-semibold text-white">{currencyFormatter.format(balance)}</p>
            <p className="mt-4 text-xs text-slate-400">
              Entradas totais de {currencyFormatter.format(totals.income)} e saídas de{" "}
              {currencyFormatter.format(Math.abs(totals.expense))} no período exibido.
            </p>
          </article>
          <article className="rounded-2xl border border-white/10 bg-white/5 p-6 shadow-inner shadow-white/5">
            <p className="text-sm font-medium text-slate-300/80">Último lançamento</p>
            {transactions[0] ? (
              <>
                <p className="mt-3 text-xl font-semibold text-white">{currencyFormatter.format(Number(transactions[0].amount))}</p>
                <p className="text-xs text-slate-400 mt-1">
                  {formatDate(transactions[0].date)} · {transactions[0].productService}
                </p>
              </>
            ) : (
              <p className="mt-3 text-xl font-semibold text-white">Nenhum lançamento ainda</p>
            )}
          </article>
          <article className="rounded-2xl border border-white/10 bg-white/5 p-6 shadow-inner shadow-white/5">
            <p className="text-sm font-medium text-slate-300/80">Usuários com acesso</p>
            <p className="mt-3 text-3xl font-semibold text-white">{company.users.length}</p>
            <p className="mt-4 text-xs text-slate-400">
              Gerencie acessos com seu contador na área administrativa caso precise adicionar novos usuários.
            </p>
          </article>
        </section>

        <section className="rounded-3xl border border-white/10 bg-white/5 p-6 shadow-inner shadow-white/5">
          <header className="flex flex-col gap-2 border-b border-white/10 pb-4 sm:flex-row sm:items-center sm:justify-between">
            <div>
              <h2 className="text-lg font-semibold text-white">Últimos lançamentos</h2>
              <p className="text-sm text-slate-300/80">Acompanhe entradas e saídas recentes da sua conta.</p>
            </div>
            <Link
              className="rounded-xl border border-white/10 bg-slate-900/70 px-4 py-2 text-sm font-semibold text-slate-100 transition hover:border-sky-500 hover:text-sky-300"
              href={`/dashboard/livro-caixa`}
            >
              Livro-caixa
            </Link>
          </header>

          <div className="mt-6 max-h-96 overflow-auto rounded-2xl border border-white/10 bg-slate-950/60">
            <table className="min-w-full divide-y divide-white/10 text-sm text-slate-200">
              <thead className="text-xs font-semibold uppercase tracking-wide text-slate-300/80">
                <tr>
                  <th className="px-4 py-3 text-left">Data</th>
                  <th className="px-4 py-3 text-left">Descrição</th>
                  <th className="px-4 py-3 text-left">Tipo</th>
                  <th className="px-4 py-3 text-left">Forma</th>
                  <th className="px-4 py-3 text-left">Valor</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-white/5">
                {transactions.length > 0 ? (
                  transactions.map((entry) => (
                    <tr key={entry.id} className="hover:bg-slate-900/60">
                      <td className="px-4 py-3">{formatDate(entry.date)}</td>
                      <td className="px-4 py-3">
                        <p className="font-medium text-white">{entry.productService}</p>
                        <p className="text-xs text-slate-400">{entry.notes || entry.counterpart}</p>
                      </td>
                      <td className="px-4 py-3">{entry.movement === "RECEITA" ? "Entrada" : "Saída"}</td>
                      <td className="px-4 py-3">{entry.paymentMethod}</td>
                      <td
                        className={`px-4 py-3 font-semibold ${
                          entry.movement === "RECEITA" ? "text-emerald-300" : "text-red-300"
                        }`}
                      >
                        {currencyFormatter.format(Number(entry.amount))}
                      </td>
                    </tr>
                  ))
                ) : (
                  <tr>
                    <td className="px-4 py-6 text-center text-sm text-slate-400" colSpan={5}>
                      Nenhum lançamento foi registrado ainda.
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </section>
      </div>
    </main>
  );
}
