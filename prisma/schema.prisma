datasource db {
  provider = "postgresql" // ou "mysql" se for o caso
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  email     String  @unique
  cnpj      String  @unique
  users     User[]
  cashEntries CashEntry[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String   // guarde o hash (ex.: argon2/bcrypt)
  name       String?
  admin      Boolean  @default(false)
  mustChangePassword Boolean @default(false)
  passwordResetToken String?  @unique
  companyId  Int?     // NULL se admin = true; obrigat√≥rio se admin = false
  company    Company? @relation(fields: [companyId], references: [id], onDelete: SetNull)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([companyId])
}

model CashEntry {
  id             Int             @id @default(autoincrement())
  companyId      Int
  company        Company         @relation(fields: [companyId], references: [id], onDelete: Cascade)
  date           DateTime
  counterpart    String
  productService String
  movement       MovementCategory
  type           ActivityType
  paymentMethod  String
  amount         Decimal         @db.Decimal(14, 2)
  notes          String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@index([companyId, date])
}

enum MovementCategory {
  RECEITA
  COMPRA
  DESPESA
  RETIRADA
}

enum ActivityType {
  COMERCIO
  INDUSTRIA
  SERVICO
  TRANSPORTE
}
